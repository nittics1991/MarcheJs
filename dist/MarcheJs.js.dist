const _MESSGAGE_DELAY_INFO=2,_MESSGAGE_DELAY_ERROR=3;class EventDispatcher{_listeners=[];addEventListener(t,e){return this._listeners[t]||(this._listeners[t]=[]),this._listeners[t].push(e),this}removeEventListener(t,e){if(!this.listeners[t])return this;let a=this;return this._listeners[t].forEach(((i,r)=>{i==e&&a.listeners[t].splice(r,1)})),this}dispatchEvent(t,e){return null==this._listeners[t]||0==this._listeners[t].length?[]:(e.type=t,this._listeners[t].map((t=>t(e))))}}class UnixDate{static now(){return(new Date).getTime()}static today(){const t=new Date;return new Date(t.getFullYear(),t.getMonth(),t.getDate(),0,0,0).getTime()}static byStrDate(t){return new Date(t+" 00:00:00.000").getTime()}static modifyDate(t,e){return t+60*e*60*24*1e3}static toDate(t){return new Date(t)}static setTimeString(t,e){const a=UnixDate.toDate(t);return new Date(a.getFullYear()+"-"+(a.getMonth()+1)+"-"+a.getDate()+" "+e).getTime()}static isToday(t){const e=UnixDate.today(),a=UnixDate.modifyDate(e,1);return t>=e&&t<a}}class DateFormatter{static toDate(t){let e;try{e=new Date(parseInt(t))}catch(t){return""}return new Date(t-60*e.getTimezoneOffset()*1e3).toISOString().substr(0,10)}static toTime(t){let e;try{e=new Date(parseInt(t))}catch(t){return""}return new Date(t-60*e.getTimezoneOffset()*1e3).toISOString().substr(11,5)}}class MarcheDataCollection{_storage_data;constructor(t){this._storage_data=t}set(t,e){return this._storage_data[t]=e,this}get(t){return this._storage_data[t]||null}remove(t){return delete this._storage_data[t],this}has(t){return null!=this.get(t)}all(){return this._storage_data}first(){const t=this._storage_data;return t[Object.keys(t).sort()[0]]||null}last(){let t=this._storage_data;return t[Object.keys(t).reverse()[0]]||null}firstId(){let t=this._storage_data;return parseInt(Object.keys(t).sort()[0])||null}lastId(){const t=this._storage_data;return parseInt(Object.keys(t).sort().slice(-1)[0])||null}findByJobName(t){const e=this._storage_data;return Object.values(e).filter((e=>e===t))}groupByJobName(){const t=this._storage_data;let e=[];return Object.values(t).forEach((t=>{-1===e.indexOf(t)&&e.push(t)})),e}findByDateString(t){const e=this._storage_data,a=UnixDate.byStrDate(t),i=UnixDate.modifyDate(a,1);let r=[],n=0;return Object.keys(e).sort().forEach((t=>{if(parseInt(t)>=a&&parseInt(t)<i){const a=((parseInt(t)-n)/1e3/60/60).toFixed(2);r.push({id:t,name:e[t],start_time:DateFormatter.toTime(t)}),n&&(r[r.length-2].diff_time=a),n=parseInt(t)}})),r}groupByDateString(t){const e=this._storage_data,a=UnixDate.byStrDate(t),i=UnixDate.modifyDate(a,1);let r=-1,n=0,s=[],o=[];return Object.keys(e).sort().forEach((t=>{if(parseInt(t)>=a&&parseInt(t)<i){const a=parseInt(t)-n;let i;-1===(i=s.indexOf(e[t]))&&(i=s.push(e[t])-1,o[i]=0),o[r]+=r>-1?a:0,r=i,n=parseInt(t)}})),s.map(((t,e)=>({name:t,diff_time:1*(o[e]?(o[e]/1e3/60/60).toFixed(2):0)})))}groupByJobNameOrderDesc(){const t=this._storage_data;let e=[];return Object.values(t).reverse().forEach((t=>{-1===e.indexOf(t)&&e.push(t)})),e}}class MarcheConfig{_storage_data;constructor(t){this._storage_data=t}set(t,e){return this._storage_data[t]=e,this}get(t){return this._storage_data[t]||null}remove(t){return delete this._storage_data[t],this}autoDates(){return this._storage_data.auto_date||{}}}class MarcheRepository{_DATA_NAMESPACE="MarcheJs";_CONFIG_NAMESPACE="MarcheJs_config";_eventDispatcher;_storage;constructor(t){this._eventDispatcher=t,this._storage=window.localStorage,this._removeExpirationData()}_dispatchStorageEvent(t){this._eventDispatcher.dispatchEvent("MarcheRepository_update_storage",t)}generateId(){return(new Date).getTime()}dataCollection(){const t=this._storage.getItem(this._DATA_NAMESPACE),e=(t?JSON.parse(t):{})._storage_data||{};return new MarcheDataCollection(e)}setJobItem(t,e){const a={target:this,id:t,job_data:e};this._eventDispatcher.dispatchEvent("MarcheRepository_setJobItem_before",a);const i=this.dataCollection();return i.set(t,e),this._storage.setItem(this._DATA_NAMESPACE,JSON.stringify(i)),this._eventDispatcher.dispatchEvent("MarcheRepository_setJobItem_after",a),this._dispatchStorageEvent(a),this}removeJobItem(t){const e={target:this,id:t};this._eventDispatcher.dispatchEvent("MarcheRepository_removeJobItem_before",e);const a=this.dataCollection();return a.remove(t),this._storage.setItem(this._DATA_NAMESPACE,JSON.stringify(a)),this._eventDispatcher.dispatchEvent("MarcheRepository_removeJobItem_after",e),this._dispatchStorageEvent(e),this}autoJob(t){t=t||UnixDate.now();const e=parseInt(t),a=this,i=this.getConfigs().autoDates();return Object.keys(i).sort().map((t=>i[t])).forEach((t=>{const i=UnixDate.setTimeString(UnixDate.today(),t.auto_date_start),r=this.dataCollection();let n=r.lastId();if(i<e&&i>n&&!r.has(i)&&(a.setJobItem(i,t.auto_date_job),n=r.lastId()),null!=n&&""!=t.auto_date_end&&UnixDate.isToday(n)){const s=UnixDate.setTimeString(UnixDate.today(),t.auto_date_end);s<e&&i>n&&!r.has(s)&&a.setJobItem(s,r.get(n))}})),this}_removeExpirationData(){const t=this.getExpiration()||0;if(t<=0||t>=1e3)return this;const e=UnixDate.today()-60*t*60*24*1e3,a=this.dataCollection();Object.keys(a.all()).forEach((t=>{parseInt(t)<e&&this.removeJobItem(t)}))}getConfigs(){const t=this._storage.getItem(this._CONFIG_NAMESPACE),e=(t?JSON.parse(t):{})._storage_data||{};return new MarcheConfig(e)}setExpiration(t=60){const e={target:this,day:t};this._eventDispatcher.dispatchEvent("MarcheRepository_setExpiration_before",e);const a=this.getConfigs();return a.set("expiration",t),this._storage.setItem(this._CONFIG_NAMESPACE,JSON.stringify(a)),this._eventDispatcher.dispatchEvent("MarcheRepository_setExpiration_after",e),this._dispatchStorageEvent(e),this}getExpiration(){return this.getConfigs().get("expiration")||0}setAutoDate(t,e,a=""){const i={target:this,jobname:t,start_time_string:e,end_time_string:a};this._eventDispatcher.dispatchEvent("MarcheRepository_setAutoDate_before",i);const r={},n=e;r.id=n,r.auto_date_job=t,r.auto_date_start=e,r.auto_date_end=a;const s=this.getConfigs(),o=s.get("auto_date")||{};return o[n]=r,s.set("auto_date",o),this._storage.setItem(this._CONFIG_NAMESPACE,JSON.stringify(s)),this._eventDispatcher.dispatchEvent("MarcheRepository_setAutoDate_after",i),this._dispatchStorageEvent(i),this}removeAutoDate(t){const e={target:this,id:t};this._eventDispatcher.dispatchEvent("MarcheRepository_removeAutoDate_before",e);const a=this.getConfigs(),i=a.get("auto_date")||{};return delete i[t],a.set("auto_date",i),this._storage.setItem(this._CONFIG_NAMESPACE,JSON.stringify(a)),this._eventDispatcher.dispatchEvent("MarcheRepository_removeAutoDate_after",e),this._dispatchStorageEvent(e),this}}class JobInputView{_eventDispatcher;_repository;constructor(t,e){this._eventDispatcher=t,this._repository=e,this._initEvent()}_initEvent(){this._eventDispatcher.addEventListener("MarcheRepository_update_storage",(()=>this.render())),document.querySelector('#job_input_view button[name="job_name_button"]').addEventListener("click",(t=>{t.preventDefault(),this._eventDispatcher.dispatchEvent("JobInputView_inputJob_before",{target:this,event:t});const e=document.querySelector('#job_input_view input[name="job_name"]'),a={};a.jobname=e.value,a.jobname&&(a.id=this._repository.generateId(),this._repository.autoJob(a.id),this._repository.setJobItem(a.id,a.jobname),e.value="",window.location.hash="#timecard_view",this._eventDispatcher.dispatchEvent("JobInputView_inputJob_after",{target:this,event:t,job_name:a}))})),document.querySelector("#job_input_view tbody").addEventListener("dblclick",(t=>{t.preventDefault(),this._eventDispatcher.dispatchEvent("JobInputView_addJob_before",{target:this,event:t});const e={};e.id=this._repository.generateId(),e.name=t.target.textContent,this._repository.autoJob(e.id),this._repository.setJobItem(e.id,t.target.textContent),window.location.hash="#timecard_view",this._eventDispatcher.dispatchEvent("JobInputView_addJob_after",{target:this,event:t,job_input_table:e})}))}render(){const t=this._repository.dataCollection().groupByJobNameOrderDesc().map((t=>["<tr>",`<td>${t}</td>`,"</tr>"].join(""))),e=document.querySelector("#job_input_view table tbody");e.textContent=null,e.insertAdjacentHTML("beforeend",t.join(""))}}class TimeCardView{_eventDispatcher;_repository;constructor(t,e){this._eventDispatcher=t,this._repository=e,this._initView(),this._initEvent()}_initView(){document.querySelector('#timecard_view input[name="job_date"]').value=DateFormatter.toDate(UnixDate.today())}_initEvent(){this._eventDispatcher.addEventListener("MarcheRepository_update_storage",(()=>this.render())),this._eventDispatcher.addEventListener("TotalDataView_changeDate_after",(()=>this.render())),document.querySelector('#timecard_view input[name="job_date"]').addEventListener("change",(t=>{t.preventDefault(),this._eventDispatcher.dispatchEvent("TimeCardView_changeDate_before",{target:this,event:t});const e={};e.job_date=t.target.value;document.querySelector('#total_data_view input[name="job_date"]').value=t.target.value;this.render(),this._eventDispatcher.dispatchEvent("TimeCardView_changeDate_after",{target:this,event:t,job_date:e})})),document.querySelector("#timecard_view table tbody").addEventListener("dblclick",(t=>{t.preventDefault(),this._eventDispatcher.dispatchEvent("TimeCardView_removeData_before",{target:this,event:t});const e={};e.name=t.target.parentNode.children[1].textContent,e.start_time=t.target.parentNode.children[2].textContent,confirm(e.name+" "+e.start_time+"を削除しますか")&&(e.id=t.target.parentNode.firstChild.textContent,this._repository.removeJobItem(e.id),this._eventDispatcher.dispatchEvent("TimeCardView_removeData_after",{target:this,event:t,timecard_table:e}))}))}render(){const t=document.querySelector('#timecard_view input[name="job_date"]').value,e=this._repository.dataCollection().findByDateString(t).map((t=>["<tr>",`<td class="display-none">${t.id}</td>`,`<td>${t.name}</td>`,`<td>${t.start_time}</td>`,`<td>${t.diff_time||""}</td>`,"</tr>"].join(""))),a=document.querySelector("#timecard_view table tbody");a.textContent=null,a.insertAdjacentHTML("beforeend",e.join(""))}}class TotalDataView{_eventDispatcher;_repository;constructor(t,e){this._eventDispatcher=t,this._repository=e,this._initView(),this._initEvent()}_initView(){document.querySelector('#total_data_view input[name="job_date"]').value=DateFormatter.toDate(UnixDate.today())}_initEvent(){this._eventDispatcher.addEventListener("MarcheRepository_update_storage",(()=>this.render())),this._eventDispatcher.addEventListener("TimeCardView_changeDate_after",(()=>this.render())),document.querySelector('#total_data_view input[name="job_date"]').addEventListener("change",(t=>{t.preventDefault(),this._eventDispatcher.dispatchEvent("TotalDataView_changeDate_before",{target:this,event:t});const e={};e.job_date=t.value,document.querySelector('#timecard_view input[name="job_date"]').value=t.target.value,this.render(),this._eventDispatcher.dispatchEvent("TotalDataView_changeDate_after",{target:this,event:t,job_date:e})}))}render(){const t=document.querySelector('#total_data_view input[name="job_date"]').value;let e=0,a=this._repository.dataCollection().groupByDateString(t).map((t=>(e+=t.diff_time,["<tr>",`<td>${t.name}</td>`,`<td>${t.diff_time.toFixed(2)}</td>`,"</tr>"].join(""))));a=a.concat(["<tr>","<td>合計</td>",`<td>${e.toFixed(2)}</td>`,"</tr>"].join(""));const i=document.querySelector("#total_data_view table tbody");i.textContent=null,i.insertAdjacentHTML("beforeend",a.join(""))}}class ConfigView{_eventDispatcher;_repository;constructor(t,e){this._eventDispatcher=t,this._repository=e,this._repository.autoJob(),this._initEvent()}_initEvent(){this._eventDispatcher.addEventListener("MarcheRepository_update_storage",(()=>this.render())),document.querySelector('#config_view button[name="config_expiration_button"]').addEventListener("click",(t=>{t.preventDefault(),this._eventDispatcher.dispatchEvent("ConfigView_setExpiration_before",{target:this,event:t});const e={};e.expire_day=document.querySelector('#config_view input[name="config_expiration"]').value,this._repository.setExpiration(e.expire_day),this._eventDispatcher.dispatchEvent("ConfigView_setExpiration_after",{target:this,event:t,expire_day:e})})),document.querySelector('#config_view button[name="auto_date_button"]').addEventListener("click",(t=>{t.preventDefault(),this._eventDispatcher.dispatchEvent("ConfigView_addAutoDate_before",{target:this,event:t});const e={};let a=document.querySelector('#config_view input[name="auto_date_job"]');e.auto_date_job=a.value;let i=document.querySelector('#config_view input[name="auto_date_start"]');if(e.auto_date_start=i.value,""===e.auto_date_job.trim()||""===e.auto_date_start.trim())return void this._eventDispatcher.dispatchEvent("ConfigView_addAutoDate_data_empty",{target:this,event:t,auto_date:e});let r=document.querySelector('#config_view input[name="auto_date_end"]');e.auto_date_end=r.value,this._repository.setAutoDate(e.auto_date_job,e.auto_date_start,e.auto_date_end),this._repository.autoJob(),a.value="",i.value="",r.value="",this._eventDispatcher.dispatchEvent("ConfigView_addAutoDate_after",{target:this,event:t,auto_date:e})})),document.querySelector("#auto_date_table tbody").addEventListener("dblclick",(t=>{t.preventDefault(),this._eventDispatcher.dispatchEvent("ConfigView_removeAutoDate_before",{target:this,event:t});const e={};e.auto_date_job=t.target.parentNode.children[1].textContent,e.auto_date_start=t.target.parentNode.children[2].textContent,e.auto_date_end=t.target.parentNode.children[3].textContent,confirm(e.auto_date_job+" "+e.auto_date_start+"を削除しますか")&&(e.id=t.target.parentNode.firstChild.textContent,this._repository.removeAutoDate(e.id),this._repository.autoJob(),this._eventDispatcher.dispatchEvent("ConfigView_removeAutoDate_after",{target:this,event:t,auto_date:e}))}))}render(){document.querySelector('#config_view input[name="config_expiration"]').value=this._repository.getExpiration();const t=Object.values(this._repository.getConfigs().autoDates()).sort().map((t=>["<tr>",`<td class="display-none">${t.id}</td>`,`<td>${t.auto_date_job}</td>`,`<td>${t.auto_date_start}</td>`,`<td>${t.auto_date_end||""}</td>`,"</tr>"].join(""))),e=document.querySelector("#auto_date_table tbody");e.textContent=null,e.insertAdjacentHTML("beforeend",t.join(""))}}class MessageView{_eventDispatcher;constructor(t){this._eventDispatcher=t,this._initEvent()}_initEvent(){this._eventDispatcher.addEventListener("JobInputView_inputJob_after",(t=>{this.info(`${t.job_name.jobname} 登録しました`,2)})),this._eventDispatcher.addEventListener("JobInputView_addJob_after",(t=>{this.info(`${t.job_input_table.name} 登録しました`,2)})),this._eventDispatcher.addEventListener("TimeCardView_removeData_after",(t=>{this.info(`${t.timecard_table.start_time} ${t.timecard_table.name} 削除しました`,2)})),this._eventDispatcher.addEventListener("ConfigView_setExpiration_after",(t=>{this.info(`データ保持日数 ${t.expire_day.expire_day} 設定しました`,2)})),this._eventDispatcher.addEventListener("ConfigView_addAutoDate_after",(t=>{this.info(`自動JOB ${t.auto_date.auto_date_job} 設定しました`,2)})),this._eventDispatcher.addEventListener("ConfigView_addAutoDate_data_empty",(t=>{this.error("自動JOB 入力が正しくありません",3)})),this._eventDispatcher.addEventListener("ConfigView_removeAutoDate_after",(t=>{this.info(`自動JOB ${t.auto_date.auto_date_job} 削除しました`,2)}))}close(){const t=document.querySelector("#message_view div:first-child");t.textContent="",t.classList.remove("background-color-info"),t.classList.remove("u-background-color-warning"),t.classList.remove("background-color-error"),document.querySelector("#message_view").classList.add("display-none"),document.body.classList.remove("position-fixed")}render(t,e,a){const i=document.querySelector("#message_view div:first-child");i.textContent=e.replace("\n","<br>"),i.classList.add(t),a=1e3*a||1e3,setTimeout(this.close,a),document.querySelector("#message_view").classList.remove("display-none"),document.body.classList.add("position-fixed")}info(t,e=1){this.render("background-color-info",t,e)}error(t,e=1){this.render("background-color-error",t,e)}}class TitleHeaderView{_eventDispatcher;_repository;constructor(t,e){this._eventDispatcher=t,this._repository=e,this._initEvent()}_initEvent(){document.querySelector('header button[name="csv_button"]').addEventListener("click",(t=>{t.preventDefault();const e=this._repository.dataCollection().all(),a=Object.keys(e).sort().map((t=>[`${DateFormatter.toDate(t)},`,`${DateFormatter.toTime(t)},`,`${e[t]}`].join("")));document.querySelector('textarea[name="csv_data"]').value=a.join("\n"),document.querySelector("#csv_view").classList.remove("display-none"),document.body.classList.add("position-fixed")}))}}class CsvView{_eventDispatcher;constructor(t){this._eventDispatcher=t,this._initEvent()}_initEvent(){document.querySelector('#csv_view button[name="csv_close_button"]').addEventListener("click",(t=>{t.preventDefault(),document.querySelector("#csv_view").classList.add("display-none"),document.body.classList.remove("position-fixed")}))}}try{var eventDispatcher=new EventDispatcher;const t=new MarcheRepository(eventDispatcher),e=(new MessageView(eventDispatcher),new JobInputView(eventDispatcher,t)),a=new TimeCardView(eventDispatcher,t),i=new TotalDataView(eventDispatcher,t),r=new ConfigView(eventDispatcher,t);new TitleHeaderView(eventDispatcher,t),new CsvView(eventDispatcher);r.render(),e.render(),a.render(),i.render()}catch(t){console.error(t),MessageView.error(t)}